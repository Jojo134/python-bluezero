# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[test]
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with pycodestyle
      run: |
        pycodestyle -v bluezero
        pycodestyle -v examples
    - name: Test with unittest
      run: |
        echo PYTHONPATH $PYTHONPATH
        echo LD_LIBRARY_PATH $LD_LIBRARY_PATH
        coverage run -m unittest -v tests.test_tools
        coverage run --append -m unittest -v tests.test_async_tools
        coverage run --append -m unittest -v tests.test_async_tools
        coverage run --append -m unittest -v tests.test_dbus_tools
        coverage run --append -m unittest -v tests.test_adapter
        coverage run --append -m unittest -v tests.test_advertisement
        coverage run --append -m unittest -v tests.test_device
        coverage run --append -m unittest -v tests.test_gatt
        coverage run --append -m unittest -v tests.test_broadcaster
        coverage run --append -m unittest -v tests.test_central
        coverage run --append -m unittest -v tests.test_observer
        coverage run --append -m unittest -v tests.test_peripheral
        coverage run --append -m unittest -v tests.test_eddystone
        coverage run --append -m unittest -v tests.test_microbit
        coverage run --append -m unittest -v tests.test_adapter_example
